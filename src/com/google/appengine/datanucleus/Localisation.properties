################################################################################
# Copyright (c) 2011 Andy Jefferson and others. All rights reserved. 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Contributions :
#
################################################################################

AppEngine.Insert.Start=Object "{0}" being inserted into AppEngine with all reachable objects
AppEngine.Insert.ObjectWithIdAlreadyExists=Object "{0}" being inserted has id "{1}" yet an object with this id already exists in the datastore!
AppEngine.Insert.ObjectPersisted=Object "{0}" (id="{1}) persisted to AppEngine
AppEngine.Insert.ObjectPersistedWithVersion=Object "{0}" (id="{1}) persisted to AppEngine with version "{2}"
AppEngine.Insert.ObjectPersistedWithIdentity=Object "{0}" persisted to AppEngine has had identity set to "{1}"
AppEngine.Update.Start=Object "{0}" (id="{1}") being updated in AppEngine (for fields "{2}") with all reachable objects
AppEngine.Delete.Start=Object "{0}" (id="{1}") being deleted from AppEngine with all dependent objects
AppEngine.Delete.ObjectDeleted=Object "{0}" (id="{1}") has been deleted
AppEngine.Fetch.Start=Object "{0}" (id="{1}") being retrieved from AppEngine
AppEngine.ExecutionTime=Execution Time = {0} ms

AppEngine.BadInheritance.JDO=Found inheritance strategy '{0}' on {1}.  This strategy is not supported in this context. Please see the documentation for information on using inheritance with {2}: http://code.google.com/appengine/docs/java/datastore/dataclasses.html#Inheritance
AppEngine.BadInheritance.JPA=Found inheritance strategy '{0}' on {1}.  This strategy is not supported in this context. Please see the documentation for information on using inheritance with {2}: http://code.google.com/appengine/docs/java/datastore/usingjpa.html#Inheritance

AppEngine.IllegalNullAssignment=Datastore entity with kind "{0}" and key "{1}" has a null property named "{2}". This property is mapped to {3}, which cannot accept null values.

AppEngine.OwnedChildCannotChangeParent=Attempt to assign child with key "{0}" to parent with key "{1}". Parent keys are immutable

AppEngine.OptimisticError.EntityHasBeenDeleted=Optimistic concurrency exception {0} class "{1}" with pk "{2}". The underlying entity had already been deleted.
AppEngine.OptimisticError.EntityHasBeenUpdated=Optimistic concurrency exception {0} class "{1}" with pk "{2}". The underlying entity had already been updated.
              
#
# MetaData
#
AppEngine.MetaData.NoPkFields=Error in meta-data for class {0} : No primary-key field defined.
AppEngine.MetaData.InvalidPKTypeForField=Error in meta-data for field {0} : Unsupported primary key type: {1}
AppEngine.MetaData.SequenceInvalidForPKType=Error in meta-data for field {0} : IdentityStrategy SEQUENCE is not supported on primary keys of type {1}
AppEngine.MetaData.SequenceInvalidForEncodedStringPK=Error in meta-data for field {0} : IdentityStrategy SEQUENCE is not supported on encoded String primary keys
AppEngine.MetaData.CompositePKNotSupported=Error in meta-data for class {0} : More than one primary key field is not supported
AppEngine.MetaData.ChildWithPKTypeInvalid=Error in meta-data for field {0} : Cannot have a primary key of type {1} and be a child object (owning field is "{2}").
AppEngine.MetaData.ClassWithMultipleFieldsOfType=Error in meta-data for class {0} : This has multiple relationship fields of type "{1}" ({2} and {3}). This is not yet supported.
AppEngine.MetaData.ManyToManyRelationNotSupported=Error in meta-data for field {0} : Many-to-many is not currently supported in App Engine. As a workaround, consider maintaining a List<Key> on both sides of the relationship. See http://code.google.com/appengine/docs/java/datastore/relationships.html#Unowned_Relationships for more information.
AppEngine.MetaData.FieldWithExtensionNotPK=Error in meta-data for field {0} : A field with the "{1}" extension must not be the primary key
AppEngine.MetaData.FieldWithExtensionForEncodedString=Error in meta-data for field {0} : A field with the "{1}" extension can only be used in conjunction with an encoded String primary key
AppEngine.MetaData.MoreThanOneFieldWithExtension=Error in meta-data for class {0} : Cannot have more than one field with the "{1}" extension.
AppEngine.MetaData.ExtensionForStringPK=Error in meta-data for field {0} : A field with the "{1}" extension can only be applied to a String primary key.
AppEngine.MetaData.ExtensionForStringField=Error in meta-data for field {0} : Extension "{1}" can only be applied to a String field.
AppEngine.MetaData.ExtensionForLongField=Error in meta-data for field {0} : Extension "{1}" can only be applied to a Long field.
AppEngine.MetaData.ParentPKType=Error in meta-data for field {0} : Parent pk must be of type String or Key.
AppEngine.MetaData.PKAndParentPKInvalid=Error in meta-data for field {0} : Cannot have a "{1}" primary key and a parent pk field.
AppEngine.MetaData.OrderPartOfPK=Error in meta-data for field {0} : Order property "{1} is a sub-component of the primary key. The datastore does not support sorting by primary key components, only the entire primary key.

AppEngine.MetaData.JoinsNotSupported=Error in meta-data for {0} : The datastore does not support joins and therefore cannot honor requests to place related objects in the default fetch group.
AppEngine.MetaData.SequenceInitialSizeNotSupported=Error in meta-data for class {0} : The datastore does not support the configuration of initial sequence values. The first value for this sequence will be 1.
AppEngine.MetaData.UniqueConstraintsNotSupported=Error in meta-data for {0} : The datastore does not support uniqueness constraints.

AppEngine.MetaData.CollectionWithSerializedElementInvalid=Error in meta-data for field {0} : You have defined a collection with an element that is serialized; this is not supported. Mark the whole field as serialized
AppEngine.MetaData.ArrayWithSerializedElementInvalid=Error in meta-data for field {0} : You have defined an array with an element that is serialized; this is not supported. Mark the whole field as serialized

AppEngine.MetaData.UnownedRelationWithInvalidStorageVersion=Field {0} is an unowned relation, yet you are using storage version of {1}. Unowned relations require a storage version of {2} minimum. Set the persistence property "datanucleus.appengine.storageVersion".

# For tests
AppEngine.MetaData.TestMsg1=main msg

