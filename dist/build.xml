<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="gae" default="testdist">

  <property name="version.major" value="0"/>
  <property name="version.minor" value="8"/>
  <property name="version.point" value="6"/>
  <property name="version" value="${version.major}.${version.minor}.${version.point}"/>
  <property name="orm.source.zip" value="datanucleus-appengine-${version}-src.zip"/>
  <property name="orm.jar" value="datanucleus-appengine-${version}.jar"/>
  <property name="zip.prefix" value="appengine-orm"/>
  <property name="dist.target" value="${zip.prefix}-${version}.zip"/>
  <property name="src.dir" value="../src"/>
  <property name="compile.dest.dir" value="classes"/>
  <property name="orm.lib.dir" value="../lib"/>
  <property name="orm.tmp.dir" value="/tmp/testdist"/>
  <property name="orm.sdk.tmp.dir" value="${orm.tmp.dir}/lib"/>

  <path id="appengine.plugin.classpath">
    <pathelement location="${orm.lib.dir}/jdo2-api-2.2.jar"/>
    <pathelement location="${orm.lib.dir}/persistence-api-1.0.2.jar"/>
    <pathelement location="${orm.lib.dir}/datanucleus-core-1.1.0.m1.jar"/>
    <pathelement location="${orm.lib.dir}/datanucleus-jpa-1.1.0.m1.jar"/>
    <pathelement location="${orm.lib.dir}/appengine-api.jar"/>
  </path>

  <target name="compile" description="Compile the datanucleus appengine plugin">
    <delete dir="${compile.dest.dir}"/>
    <mkdir dir="${compile.dest.dir}"/>
    <javac classpathref="appengine.plugin.classpath" debug="on" source="1.5" target="1.5"
        srcdir="${src.dir}" destdir="${compile.dest.dir}"/>
  </target>

  <target name="jar" depends="compile" description="Jar the compiled datanucleus appengine plugin">
    <!-- need to copy over all non-java resources -->
    <copy todir="${compile.dest.dir}">
      <fileset dir="${src.dir}">
        <include name="**/*.xml"/>
        <include name="**/*.properties"/>
        <include name="**/*.MF"/>
        <include name="META-INF/services/**"/>
      </fileset>
    </copy>
    <jar destfile="${orm.jar}" basedir="${compile.dest.dir}">
      <manifest>
        <attribute name="Manifest-Version" value="1.0"/>
        <attribute name="Bundle-ManifestVersion" value="2"/>
        <attribute name="Bundle-Name" value="DataNucleus AppEngine"/>
        <attribute name="Bundle-SymbolicName" value="org.datanucleus.store.appengine;singleton:=true"/>
        <attribute name="Bundle-Version" value="${version}"/>
        <attribute name="Bundle-Vendor" value="Google"/>
        <attribute name="Require-Bundle" value="org.datanucleus;bundle-version=&quot;[1.1.0.m4)&quot;"/>
        <attribute name="Import-Package" value="javax.jdo, javax.jdo.annotations, javax.jdo.datastore, javax.jdo.identity, javax.jdo.listener, javax.persistence, javax.persistence.spi"/>
      </manifest>
    </jar>
    <!-- Extract the manifest and copy it back into the source tree -->
    <mkdir dir="exploded"/>
    <unzip src="${orm.jar}" dest="exploded"/>
    <copy file="exploded/META-INF/MANIFEST.MF" todir="${src.dir}/META-INF"/>
    <delete dir="exploded"/>
  </target>

  <target name="dist" depends="compile, jar" description="Build the datanucleus appengine distribution">
    <zip destfile="${orm.source.zip}">
      <fileset dir="${src.dir}" includes="**/*"/>
    </zip>
    <zip destfile="${dist.target}">
      <zipfileset prefix="demos" dir="../demos">
        <include name="**"/>
        <exclude name="**/*.iml"/>
      </zipfileset>
      <zipfileset prefix="docs" dir="../doc">
        <include name="**"/>
      </zipfileset>
      <zipfileset prefix="lib/tools/orm" dir="${orm.lib.dir}">
        <include name="asm*.jar"/>
        <include name="jdo2-api*.jar"/>
        <!-- Don't ship txn and jpa jars-->
        <!-- TODO(maxr): Uncomment once legal concerns are addressed -->
        <!--<include name="transaction-api-1.1.jar"/>-->
        <!--<include name="persistence-api-1.0.2.jar"/>-->
        <include name="datanucleus-enhancer*.jar"/>
        <include name="datanucleus-jpa*.jar"/>
        <include name="datanucleus-core*.jar"/>
      </zipfileset>
      <zipfileset prefix="lib/user/orm" dir="${orm.lib.dir}">
        <include name="jdo2-api*.jar"/>
        <!-- Don't ship txn and jpa jars-->
        <!-- TODO(maxr): Uncomment once legal concerns are addressed -->
        <!--<include name="transaction-api-1.1.jar"/>-->
        <!--<include name="persistence-api-1.0.2.jar"/>-->
        <include name="datanucleus-jpa*.jar"/>
        <include name="datanucleus-core*.jar"/>
      </zipfileset>
      <zipfileset prefix="lib/user/orm" file="${orm.jar}"/>
      <zipfileset prefix="src/orm" file="${orm.source.zip}"/>
      <zipfileset prefix="src/orm" dir="${orm.lib.dir}">
        <include name="datanucleus-*src*"/>
      </zipfileset>
      <zipfileset file="README.ORM"/>
    </zip>
    <delete file="${orm.jar}"/>
    <delete file="${orm.source.zip}"/>
  </target>

  <target name="testdist" depends="dist"
          description="Unzip the dist, launch one of the sample apps, and hit it
                       with curl to make sure it is functioning properly.">
    <!--
      Setup a directory for the test distribution
      It should look like this:
      /tmp/testdist/lib
      /tmp/testdist/lib/appengine-tools-api.jar
      /tmp/testdist/lib/impl/appengine-local-runtime.jar
      /tmp/testdist/lib/impl/appengine-api.jar
      /tmp/testdist/lib/shared/servlet-api-2.5 .jar
      /tmp/testdist/lib/shared/jsp-api-2.1 .jar
      /tmp/testdist/lib/shared/appengine-local-runtime-shared.jar
      /tmp/testdist/appengine-orm
      /tmp/testdist/appengine-orm/<orm distro>
     -->
    <delete dir="${orm.tmp.dir}"/>
    <mkdir dir="${orm.tmp.dir}"/>

    <!-- Now setup a directory that contains the sdk jars we need to run the demos -->
    <mkdir dir="${orm.sdk.tmp.dir}"/>
    <copy todir="${orm.sdk.tmp.dir}">
      <fileset dir="${orm.lib.dir}">
        <include name="appengine-tools-api.jar"/>
      </fileset>
    </copy>

    <mkdir dir="${orm.sdk.tmp.dir}/impl"/>
    <copy todir="${orm.sdk.tmp.dir}/impl">
      <fileset dir="${orm.lib.dir}">
        <include name="appengine-local-runtime.jar"/>
        <include name="appengine-api-stubs.jar"/>
        <include name="appengine-api.jar"/>
      </fileset>
    </copy>

    <mkdir dir="${orm.sdk.tmp.dir}/shared"/>
    <copy todir="${orm.sdk.tmp.dir}/shared">
      <fileset dir="${orm.lib.dir}">
        <include name="appengine-local-runtime-shared.jar"/>
        <include name="servlet-api*.jar"/>
        <include name="jsp-api*.jar"/>
        <include name="el-api*.jar"/>
      </fileset>
    </copy>

    <unzip src="${dist.target}" dest="${orm.tmp.dir}"/>

    <!-- Copy over the jta and jpa jars which we don't ship with the distro -->
    <!-- TODO(maxr): Get rid of this once legal concerns are addressed -->
    <copy todir="${orm.tmp.dir}/lib/user/orm">
      <fileset dir="${orm.lib.dir}">
        <include name="transaction-api*.jar"/>
        <include name="persistence-api*.jar"/>
      </fileset>
    </copy>
    <copy todir="${orm.tmp.dir}/lib/tools/orm">
      <fileset dir="${orm.lib.dir}">
        <include name="persistence-api*.jar"/>
      </fileset>
    </copy>

    <parallel>
      <daemons>
        <ant dir="${orm.tmp.dir}/demos/helloorm"/>
      </daemons>
      <sequential>
        <sleep seconds="8"/>

        <!-- create a flight -->
        <exec executable="curl" failifexecutionfails="true" failonerror="true">
          <arg value="-d"/>
          <arg value="orig=BOS&amp;dest=LAX"/>
          <arg value="http://localhost:8080/addFlight"/>
        </exec>
        <exec executable="curl" failifexecutionfails="true" failonerror="true" outputproperty="curl.add.result">
          <arg value="http://localhost:8080"/>
        </exec>
        <condition property="expected.add.response">
          <contains string="${curl.add.result}" substring="aghoZWxsb29ybXIMCxIGRkxJR0hUGAEM"/>
        </condition>
        <fail unless="expected.add.response" message="Did not get the expected add response: ${curl.add.result}${line.separator}${line.separator}    BUILD FAILED!!!!"/>

         <!-- issue a jpql query -->
        <exec executable="curl" failifexecutionfails="true" failonerror="true" outputproperty="curl.query.result">
          <arg value="-d"/>
          <arg value="q=select f from com.google.appengine.demos.helloorm.Flight f where orig = 'BOS'"/>
          <arg value="http://localhost:8080"/>
        </exec>
        <condition property="expected.query.response">
          <contains string="${curl.query.result}" substring="aghoZWxsb29ybXIMCxIGRkxJR0hUGAEM"/>
        </condition>
        <fail unless="expected.query.response" message="Did not get the expected query response: ${curl.query.result}${line.separator}${line.separator}    BUILD FAILED!!!!"/>

        <!-- switch to jdo -->
       <exec executable="curl" failifexecutionfails="true" failonerror="true">
         <arg value="-d"/>
         <arg value="persistenceStandard=JDO"/>
         <arg value="http://localhost:8080/updatePersistenceStandard"/>
       </exec>
        <exec executable="curl" failifexecutionfails="true" failonerror="true" outputproperty="curl.switchps.result">
          <arg value="http://localhost:8080"/>
        </exec>
       <condition property="expected.switchps.response">
         <contains string="${curl.switchps.result}" substring="Persistence standard is JDO"/>
       </condition>
       <fail unless="expected.switchps.response" message="Did not get the expected switchps response: ${curl.switchps.result}${line.separator}${line.separator}    BUILD FAILED!!!!"/>
      </sequential>
    </parallel>
  </target>
</project>
