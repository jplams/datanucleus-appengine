################################################################################
# Copyright (c) 2003 Andy Jefferson and others. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Contributors:
#     ...
#
# Resources for org.datanucleus.store.mapped package
################################################################################
018009=Field "{0}" does not exist in {1} or is not persistent
018010=Field number {0} does not exist in {1} or is not persistent
#
# Schema Mapping, columns etc
#
020000=Persistent class "{0}" has no table in the database, but the operation requires it. Please check the specification of the MetaData for this class.
020001=Field has no corresponding database column : {0}
020007=Duplicate column name "{0}" defined for table "{1}". You cannot map multiple fields to the same column. The duplicated columns are specified by {2} and {3}. See also persistence property "datanucleus.rdbms.allowColumnReuse"
020008=? datastore-identity|index columns|other non mapped to any field ?
020015=Exceeded maximum of {0} foreign keys for table {1}
020016=Exceeded maximum of {0} index keys for table {1}

#
# Mapping
#
041000=The Java type {0} has no known mapping class available in DataNucleus.
041001=The field "{0}" with Java type {1} has no known mapping class available in DataNucleus.

041004=Somehow {0}.{1}() was called, which should have been impossible!
041005=Somehow {0}.{1}() was called on the mapping for field="{2}", which should have been impossible!

041011=Missing constructor {0}(ClassTable, int)
041012={0} can only be used with a persistence-capable field
041013=The plugin.xml has specified a datastore-mapping class of "{0}" yet this is not found
041014=Field "{0}" has been specified to use a mapping class "{1}" yet this class was not found! Please check your metadata and respecify the mapping class.
041015=Cannot assign field to an object from a different PersistenceManager
041016=Object is not a PersistenceCapable instance. Object class = {0}, value = {1}

041018=Object "{0}" has field "{1}" with a 1-1 bidirectional relation set to relate to "{2}" but this object hasnt had the relation at field "{3}" set so updating the object directly.
041019=Object "{0}" has bidirectional field "{1}" currently set to "{2}" but this object is being deleted so nulling this field
041020=Object "{0}" has field "{1}" with a 1-1 bidirectional relation set to relate to "{2}" but this object relates back to a different object "{3}"!

041022=Object "{0}" has field "{1}" with an N-1 bidirectional relation set to relate to "{2}" but the collection at "{3}" doesn't contain this object.
041023=Specified field "{0}" has no container (collection/map/array) MetaData!

041034=Retrieved object with OID "{0}"

041038=Primary Key column "{0}" for table "{1}" is not mapped.

041042=Field "{0}" is specified as embedded. DataNucleus doesnt currently support the persistence of embedded Object fields.

041044=Field "{0}" is a reference field (interface/Object) of type {1} but DataNucleus is unable to assign an object of type "{2}" to this field. You can only assign this field to a type specified by the "implementation-classes" extension attribute.

041050=Failure in call to "{0}" for position {1} for column "{2}" : {3}
