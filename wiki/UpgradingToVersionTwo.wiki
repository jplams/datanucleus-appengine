= Introduction =

This page contains instructions for upgrading from version 1.X of the plugin to version 2.X.


= Installation =
We recommend you make a fresh copy of the SDK, install the DataNucleus plugin there, and then develop against this copy of the SDK. Here is the sequence of commands you can use, assuming your sdk lives in `<sdk_root>`:

Make a copy of the SDK:
<br>
{{{
cp -r <sdk_root> <new_sdk_root>
}}}

Delete all components of the v1 plugin:
{{{
rm -rf <new_sdk_root>/lib/user/orm/*
rm -rf <new_sdk_root>/lib/tools/orm/*
rm -rf <new_sdk_root>/src/orm/*
}}}

Unzip the v2 zip archive into `<new_sdk_root>`:
{{{
cd <new_sdk_root>
unzip datanucleus-appengine-2.0.0-RC2-dist.zip
}}}

= Configuration =
We have removed the App Engine specific JDO and JPA providers in V2, so you'll need to edit your config files as follows:

In jdoconfig.xml, the value of `javax.jdo.PersistenceManagerFactoryClass`
should now be `org.datanucleus.api.jdo.JDOPersistenceManagerFactory`.

In persistence.xml, the value of `provider` should now be `org.datanucleus.api.jpa.PersistenceProviderImpl`.

== Configuration With Ant ==
The enhancement Ant task that ships with the SDK does not work with v2 of the DataNucleus plugin, so if you're using Ant you'll need to use the DataNucleus enhancement task directly:
{{{
<path id="enhancer.classpath">
    <fileset dir="${sdk.dir}/lib/tools/orm">
        <include name="**/*.jar"/>
    </fileset>
</path>

<target name="dnv2enhance" description="DataNucleus enhancement">
    <taskdef name="datanucleusenhancer" classpathref="enhancer.classpath" 
                classname="org.datanucleus.enhancer.tools.EnhancerTask" />

    <datanucleusenhancer classpathref="enhancer.classpath"
        failonerror="true" verbose="true">
    </datanucleusenhancer>
</target>

<target name="runserver" depends="dnv2enhance"
      description="Starts the development server.">
    <dev_appserver war="war" />
</target>
}}}

== Configuration With Eclipse ==

== Configuration With IntelliJ ==